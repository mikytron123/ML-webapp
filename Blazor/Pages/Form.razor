@page "/form"
@using Microsoft.Extensions.Logging
@using Newtonsoft.Json
@using System.Text
@using System.Threading.Tasks
@inject HttpClient Http
@inject ILogger<Form> Logger
<PageTitle>Form</PageTitle>

<h1>Form</h1>
<div>
    <span>Please fill out the form to make predictions</span>
</div>
<EditForm Model="@Model" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary /> 
    <Dropdown id="Age" @bind-Bindval="Model.age" choices=@(Model.ages)>
    </Dropdown> 
    <Dropdown id="Workclass" @bind-Bindval="Model.workclass" choices=@(Model.workcat)> 
    </Dropdown> 

    <Dropdown id="Education" @bind-bindval=@Model.education choices=@Model.educationcat></Dropdown>
    <Dropdown id="MartialStatus" @bind-bindval=@Model.marital_status choices=@Model.status></Dropdown>
    <Dropdown id="Occupation" @bind-bindval=@Model.occupation choices=@Model.occ></Dropdown>
    <Dropdown id="Relationship" @bind-bindval=@Model.relationship choices=@Model.relation></Dropdown>
    <Dropdown id="Race" @bind-bindval=@Model.race choices=@Model.racecat></Dropdown>
    <Dropdown id="Sex" @bind-bindval=@Model.sex choices=@Model.sexcat></Dropdown>
    <Dropdown id="Capitalgain" @bind-bindval=@Model.capitalgain choices=@Model.capitalgaincat></Dropdown>
    <Dropdown id="Capitalloss" @bind-bindval=@Model.capitalloss choices=@Model.capitalgaincat></Dropdown>
    <Dropdown id="Hoursperweek" @bind-bindval=Model.hoursperweek choices=@Model.capitalgaincat></Dropdown>
     
    <p>fnlwgt:</p>
    <InputNumber id="fnlwgt" @bind-Value="Model.fnlwgt"/>
    <button type="submit">Submit</button>
</EditForm> 
<div>
@if (@result is not null){
    <p>Prediction is @result</p>
}
</div>
@code {
    private Model Model = new();

    private string? result;

    public class HttpResult
    {
        public string? prediction {get;set;}
    }

    private async Task HandleValidSubmit()
    {
        result=null;
        var json = JsonConvert.SerializeObject(Model);
        var payload = new StringContent(json, Encoding.UTF8, "application/json");
        var response = await Http.PostAsync("http://localhost:80/predict",payload);
        var strdata = await response.Content.ReadAsStringAsync();
        var jsonobj = JsonConvert.DeserializeObject<HttpResult>(strdata);
        result = jsonobj.prediction;
    }

}